<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:bop2="http://www.fanuc.co.jp/develop/mmc/bop2">
   <head>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
      <title>cnc_upload3</title>
   </head>
   <body bgcolor="#FFFFFF"><FONT face="Verdana,Arial,Helvetica,sans-serif"><a name="Function Name"></a><p class="ftitle">cnc_upload3</p>
         <div class="text"><a name="Declaration"></a><p class="label">Declaration</p>
            <div class="mth">#include "fwlib32.h" or "fwlib64.h"
               <p></p>
               <prottype>FWLIBAPI short WINAPI cnc_upload3(unsigned short FlibHndl, long *length, char *data);
                  </prottype>
            </div><a name="Description"></a><p class="label">Description</p>
            <cmn>
               
               <p>Read NC data registered on the memory in CNC.</p>
               
               <p>
                  This function reads the characters of NC data as long as it is specified by '*length'.<br>
                  However, if the number of characters to read is less than the specified number by
                  delaying CNC data process,
                  this function reads the characters as many as possible and then sets length' with
                  the real number of 
                  characters which are read in the buffer.
                  </p>
               
               <p>
                  In case that this function cannot read at least one character, 
                  it returns EW_BUFFER, so again call this function with the same arguments.
                  </p>
               
               <p>
                  Because importance is attached to the speed of data transfer to the CNC, in general,
                  return of errors(EW_DATA, etc.) may be delayed.
                  Namely, an error status may refrect the result caused by the previously executed cnc_upload3
                  callings.
                  And the error status for some cnc_upload3 callings just before the finish of uploading
                  is returned
                  by <a href="../program/cnc_upend3.xml" target="_parent">cnc_upend3</a> function.
                  </p>
               <br>
               <b>Format of input data</b>
               
               <p>NC data which is read from CNC is the string composed of ASCII characters as following
                  format.</p>
               
               
               <p class="dd">
                  % LF Block1 LF Block2 LF ... LF %<br>
                  where LF = 0x0A ('\n')<br>
                  <br>
                  or<br>
                  <br>
                  % LF CR CR Block1 LF CR CR Block2 LF CR CR ... LF CR CR %<br>
                  where CR = 0x0D ('\r') , LF = 0x0A ('\n') <br>
                  <br>
                  The parameter (Series 15i:0000#3, Series 16i/18i/21i/0i/Power Mate i:0100#3)
                  determines which is used. And space code (' ') may be inserted before LF for TV check.<br>
                  See the CNC operaation manual for details. 
                  </p>
               
               
               <p>
                  A null character('\x00') is not added at the end of each string stored in the buffer.<br>
                  The last character of read NC data is '%'. If the application keeps reading by using
                  this function
                  after reading the last '%', cnc_upload3 returns EW_RESET.
                  </p>
               <br>
               
               <p>
                  In case of 30i/31i/32i, 0i-D/F and PMi-A, when the CNC parameter No.6019#0 is '1',
                  the number of the macro variable and the variable data are output as a comment continuously
                  after '%' of the end of data.
                  <p></p>
                  The last character of comment data is also '%'.  If the application keeps reading
                  by using this function after reading the last '%', cnc_upload3 returns EW_RESET.
                  
                  </p>
               
               <p>
                  In case of 30i/31i/32i, 0i-D/F and PMi-A, the protected NC program(O8000-/O9000- protection,
                  encoding) is acquired as "% LF % LF",  and EW_PROT error will return by cnc_upend3.
                  </p>
               </cmn><a name="Arguments"></a><p class="label">Arguments</p>
            <div class="dtarg">
               <name>FlibHndl</name>
               &nbsp;&nbsp;[&nbsp;
               <type>in</type>&nbsp;]
               </div>
            <div class="ddarg">
               <content>
                  
                  <p>
                     Specify the library handle.
                     See "<a href="handle.htm" target="_parent">Library handle</a>" for details.
                     </p>
                  </content>
            </div>
            <div class="dtarg">
               <name>length</name>
               &nbsp;&nbsp;[&nbsp;
               <type>in/out</type>&nbsp;]
               </div>
            <div class="ddarg">
               <content>
                  
                  <p>
                     Specify the pointer of the variable to the character length of NC data.<br>
                     Set read number of characters by one time to it and it must be a multiple of 256.
                     (except 30i/31i/32i, 0i-D/F, PMi-A)
                     </p>
                  
                  <p>After reading, the number of characters actually read is set in this variable again.</p>
                  
                  <p>This function returns EW_LENGTH if '*length' is less than 256.</p>
                  </content>
            </div>
            <div class="dtarg">
               <name>data </name>
               &nbsp;&nbsp;[&nbsp;
               <type>out</type>&nbsp;]
               </div>
            <div class="ddarg">
               <content>
                  
                  <p>Specify the pointer to the buffer to be read.</p>
                  </content>
            </div><a name="Return"></a><p class="label">Return</p>
            <p>EW_OK is returned on successful completion, otherwise any value except EW_OK is returned.</p>
            <p>The major error codes are as follows.</p>
            <table border="1">
               <colgroup align="center" valign="top"></colgroup>
               <colgroup align="left" valign="top"></colgroup>
               <colgroup align="left" valign="top"></colgroup>
               <tr>
                  <th>Return code</th>
                  <th>Meaning/Error handling</th>
               </tr>
               <tr>
                  <td>
                     <name>EW_RESET</name><br>(-2)</td>
                  <td>
                     <content>
                        Reset or stop request<br>
                        The data to read is nothing.<br>
                        Call the <a href="../program/cnc_upend3.xml" target="_parent">cnc_upend3</a> function.
                        </content>
                  </td>
               </tr>
               <tr>
                  <td>
                     <name>EW_FUNC</name><br>(1)</td>
                  <td>
                     <content>
                        <a href="../program/cnc_upstart3.xml" target="_parent">cnc_upstart3</a> function has not been executed.
                        </content>
                  </td>
               </tr>
               <tr>
                  <td>
                     <name>EW_LENGTH</name><br>(2)</td>
                  <td>
                     <content>
                        The size of character string is less than 256. (except 30i/31i/32i, 0i-D/F, PMi-A)
                        </content>
                  </td>
               </tr>
               <tr>
                  <td>
                     <name>EW_DATA</name><br>(5)</td>
                  <td>
                     <content>
                        Data error<br>
                        In order to get more information for this err_no return value, execute
                        <a href="../misc/cnc_getdtailerr.xml" target="_parent">cnc_getdtailerr</a> function.<br>
                        The following detail status will be set onto the member, err_no of ODBERR structure.<br>
                        
                        <table>
                           
                           <colgroup align="center" valign="top">
                              
                              <colgroup align="center" valign="top">
                                 
                                 <colgroup valign="top">
                                    
                                    <tr>
                                       
                                       <td>2</td>
                                       <td>:</td>
                                       <td>Program is not found within the specified range.</td>
                                       </tr>
                                    
                                    <tr>
                                       
                                       <td>3</td>
                                       <td>:</td>
                                       <td>NC program memory is broken.</td>
                                       </tr>
                                    </colgroup>
                                 </colgroup>
                              </colgroup>
                           </table>
                        See <a href="#disc">Description</a> about the timing of error.
                        </content>
                  </td>
               </tr>
               <tr>
                  <td>
                     <name>EW_PROT</name><br>(7)</td>
                  <td>
                     <content>
                        Protected (except 30i/31i/32i, 0i-D/F, PMi-A)<br>
                        Tape memory is read-protected by the CNC parameter setting(O8000-/O9000- protection,
                        encoding).<br>
                        See <a href="#disc">Description</a> about the timing of error.
                        </content>
                  </td>
               </tr>
               <tr>
                  <td>
                     <name>EW_BUFFER</name><br>(10)</td>
                  <td>
                     <content>
                        Buffer empty/full<br>
                        Retry because the buffer is empty.<br>
                        See <a href="#disc">Description</a> about the timing of error.
                        </content>
                  </td>
               </tr>
               <tr>
                  <td>
                     <name>EW_REJECT</name><br>(13)</td>
                  <td>
                     <content>
                        CNC execution denied (Series 15i)<br>
                        Uploading is disable in the current CNC status.<br>
                        (Machining, resetting, mode changing)<br>
                        See <a href="#disc">Description</a> about the timing of error.
                        </content>
                  </td>
               </tr>
               <tr>
                  <td>
                     <name>EW_ALARM</name><br>(15)</td>
                  <td>
                     <content>
                        Alarm state (Series 15i)<br>
                        Alarm has occurred while uploading.
                        See <a href="#disc">Description</a> about the timing of error.
                        </content>
                  </td>
               </tr>
            </table>
            <p></p>
            <p>
               As for the other return codes or the details, see 
               
               "<a href="errcode.htm" target="_parent">Return status of Data window function</a>"
               </p><a name="CNC option"></a><p class="label">CNC option</p>
            <p></p>
            <p>And this function is related to the following CNC option.</p>
            <ul>
               <p>
                  <type>
                     
                     <li>Series 15i</li>
                     Pitch error compensation<br>
                     Custom macro<br>
                     <br>
                     
                     <li>Series 16i/18i/21i, 0i, 30i, PMi-A</li>
                     Pitch error compensation<br>
                     Custom macro<br>
                     Work zero offset
                     </type>
               </p>
            </ul>
            <p>For HSSB connection,</p>
            <ul>
               <p>
                  <hssb>The extended driver/library function is necessary.</hssb>
               </p>
            </ul>
            <p>For Ethernet connection,</p>
            <ul>
               <p>
                  <ethr>
                     <p>The Ethernet function and the extended driver/library function are necessary.</p>
                     
                     <p>However, in case of Series 16i/18i/21i-B, 0i-B/C/D/F, Series 30i and PMi-A, the required
                        CNC option is as follows.</p>
                     
                     <p>When Embedded Ethernet is used,</p>
                     
                     <p>
                        <ul>above two optional functions are not required.</ul>
                     </p>
                     
                     <p>When Ethernet board is used,</p>
                     
                     <p>
                        <ul>only Ethernet function is required.</ul>
                     </p>
                     </ethr>
               </p>
            </ul>
            <p></p><a name="CNC parameter"></a><p class="label">CNC parameter</p>
            <p>This function is related to the following CNC parameter.<br>
               See the manual of CNC parameter for details.</p>
            <p>
               <type>
                  
                  <ul>
                     
                     <li>Series 15i</li>
                     0021=16(HSSB), 7(Ethernet) (*) (must be set)<br>
                     0023=16(HSSB), 7(Ethernet) (*) (must be set)<br>
                     0000#3<br>
                     0011#0,#1,2201#0,#1<br>
                     2210,2211,2212,2213<br>
                     <br>
                     
                     <li>Series 16i/18i/21i, 0i-A/B/C</li>
                     3107#4<br>
                     <br>
                     
                     <li>Series 16i/18i/21i, 0i, 30i/31i/32i, PMi-A</li>
                     0100#3<br>
                     3202#0,#4,#6<br>
                     3204#3,#4<br>
                     3210,3211<br>
                     <br>
                     
                     <li>Series 30i/31i/32i, 0i-D/F, PMi-A</li>
                     6019#0<br>
                     <br>
                     
                     <li>Power Mate i</li>
                     0100#3<br>
                     3202#0,#4,#6<br>
                     3204#3,#4<br>
                     </ul>
                  
                  <blockquote>
                     
                     <table>
                        
                        <tr>
                           <td rowspan="3" valign="top">*</td>
                           <td colspan="3">In case of NC program</td>
                        </tr>
                        
                        <tr>
                           <td>EDIT mode              </td>
                           <td>:</td>
                           <td>0021 is used</td>
                        </tr>
                        
                        <tr>
                           <td>Not EDIT mode          </td>
                           <td>:</td>
                           <td>0023 is used</td>
                        </tr>
                        
                        <tr>
                           <td rowspan="3" valign="top">*</td>
                           <td colspan="3">In case of except NC program</td>
                        </tr>
                        
                        <tr>
                           <td>Not background editing</td>
                           <td>:</td>
                           <td>0021 is used</td>
                        </tr>
                        
                        <tr>
                           <td>Background editing    </td>
                           <td>:</td>
                           <td>0023 is used</td>
                        </tr>
                        </table>
                     </blockquote>
                  </type>
            </p>
            <p></p><a name="CNC mode"></a><p class="label">CNC mode</p>
            <p>
               <cmn>
                  This function can be used in any CNC mode.<br>
                  (It is necessary to set mode according to the target data.)
                  </cmn>
            </p>
            <p></p><a name="Available CNC"></a><p class="label">Available CNC</p>
            <table border="1">
               <colgroup width="100em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <tr>
                  <th></th>
                  <th>0i-A</th>
                  <th>0i-B/C(Note)</th>
                  <th>0i-D</th>
                  <th>0i-F</th>
                  <th>15</th>
                  <th>15i</th>
                  <th>16</th>
                  <th>18</th>
                  <th>21</th>
                  <th>16i-A</th>
                  <th>18i-A</th>
                  <th>21i-A</th>
                  <th>16i-B</th>
                  <th>18i-B</th>
                  <th>21i-B</th>
                  <th>30i-A</th>
                  <th>30i-B</th>
               </tr>
               <tr>
                  <td>M (Machining)</td>
                  <td class="">
                     <fs0ia>X</fs0ia>
                  </td>
                  <td class="support">
                     <fs0ib>O</fs0ib>
                  </td>
                  <td class="support">
                     <fs0id>O</fs0id>
                  </td>
                  <td class="support">
                     <fs0if>O</fs0if>
                  </td>
                  <td class="">
                     <fs15>X</fs15>
                  </td>
                  <td class="support">
                     <fs15i>O</fs15i>
                  </td>
                  <td class="">
                     <fs16>X</fs16>
                  </td>
                  <td class="">
                     <fs18>X</fs18>
                  </td>
                  <td class="">
                     <fs21>X</fs21>
                  </td>
                  <td class="support">
                     <fs16ia>O</fs16ia>
                  </td>
                  <td class="support">
                     <fs18ia>O</fs18ia>
                  </td>
                  <td class="support">
                     <fs21ia>O</fs21ia>
                  </td>
                  <td class="support">
                     <fs16ib>O</fs16ib>
                  </td>
                  <td class="support">
                     <fs18ib>O</fs18ib>
                  </td>
                  <td class="support">
                     <fs21ib>O</fs21ib>
                  </td>
                  <td class="support">
                     <fs30ia>O</fs30ia>
                  </td>
                  <td class="support">
                     <fs30ib>O</fs30ib>
                  </td>
               </tr>
               <tr>
                  <td>T (Turning)  </td>
                  <td class="">
                     <fs0ia>X</fs0ia>
                  </td>
                  <td class="support">
                     <fs0ib>O</fs0ib>
                  </td>
                  <td class="support">
                     <fs0id>O</fs0id>
                  </td>
                  <td class="support">
                     <fs0if>O</fs0if>
                  </td>
                  <td class="">
                     <fs15>X</fs15>
                  </td>
                  <td>
                     -
                     </td>
                  <td class="">
                     <fs16>X</fs16>
                  </td>
                  <td class="">
                     <fs18>X</fs18>
                  </td>
                  <td class="">
                     <fs21>X</fs21>
                  </td>
                  <td class="support">
                     <fs16ia>O</fs16ia>
                  </td>
                  <td class="support">
                     <fs18ia>O</fs18ia>
                  </td>
                  <td class="support">
                     <fs21ia>O</fs21ia>
                  </td>
                  <td class="support">
                     <fs16ib>O</fs16ib>
                  </td>
                  <td class="support">
                     <fs18ib>O</fs18ib>
                  </td>
                  <td class="support">
                     <fs21ib>O</fs21ib>
                  </td>
                  <td class="support">
                     <fs30ia>O</fs30ia>
                  </td>
                  <td class="support">
                     <fs30ib>O</fs30ib>
                  </td>
               </tr>
               <tr>
                  <td>LC (Loader)  </td>
                  <td>
                     -
                     </td>
                  <td>
                     -
                     </td>
                  <td>
                     -
                     </td>
                  <td>
                     -
                     </td>
                  <td>
                     -
                     </td>
                  <td>
                     -
                     </td>
                  <td class="">
                     <fs16>X</fs16>
                  </td>
                  <td class="">
                     <fs18>X</fs18>
                  </td>
                  <td class="">
                     <fs21>X</fs21>
                  </td>
                  <td class="">
                     <fs16ia>X</fs16ia>
                  </td>
                  <td class="">
                     <fs18ia>X</fs18ia>
                  </td>
                  <td class="">
                     <fs21ia>X</fs21ia>
                  </td>
                  <td class="">
                     <fs16ib>X</fs16ib>
                  </td>
                  <td class="">
                     <fs18ib>X</fs18ib>
                  </td>
                  <td class="">
                     <fs21ib>X</fs21ib>
                  </td>
                  <td>
                     -
                     </td>
                  <td>
                     -
                     </td>
               </tr>
            </table>
            <p></p>
            <table border="1">
               <colgroup width="100em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <tr>
                  <th></th>
                  <th>0i-D</th>
                  <th>0i-F</th>
                  <th>16i</th>
                  <th>18i</th>
                  <th>30i-A</th>
                  <th>30i-B</th>
               </tr>
               <tr>
                  <td>P (Punch press)</td>
                  <td class="support">
                     <fs0id>O</fs0id>
                  </td>
                  <td class="support">
                     <fs0if>O</fs0if>
                  </td>
                  <td class="support">
                     <fs16i>O</fs16i>
                  </td>
                  <td class="support">
                     <fs18i>O</fs18i>
                  </td>
                  <td>
                     -
                     </td>
                  <td class="support">
                     <fs30ib>O</fs30ib>
                  </td>
               </tr>
               <tr>
                  <td>L (Laser)      </td>
                  <td>
                     -
                     </td>
                  <td>
                     -
                     </td>
                  <td class="support">
                     <fs16i>O</fs16i>
                  </td>
                  <td>
                     -
                     </td>
                  <td>
                     -
                     </td>
                  <td class="support">
                     <fs30ib>O</fs30ib>
                  </td>
               </tr>
               <tr>
                  <td>W (Wire)       </td>
                  <td>
                     -
                     </td>
                  <td>
                     -
                     </td>
                  <td class="support">
                     <fs16i>E</fs16i>
                  </td>
                  <td class="support">
                     <fs18i>E</fs18i>
                  </td>
                  <td class="support">
                     <fs30ia>O</fs30ia>
                  </td>
                  <td class="support">
                     <fs30ib>O</fs30ib>
                  </td>
               </tr>
            </table>
            <p></p><br><table border="1">
               <colgroup width="100em"></colgroup>
               <colgroup align="center" width="86em"></colgroup>
               <colgroup align="center" width="86em"></colgroup>
               <tr>
                  <td>Power Mate i-D</td>
                  <td class="support">
                     <d>O</d>
                  </td>
               </tr>
               <tr>
                  <td>Power Mate i-H</td>
                  <td class="support">
                     <h>O</h>
                  </td>
               </tr>
               <tr>
                  <td>Power Motion i-A</td>
                  <td class="support"><a>O</a></td>
               </tr>
            </table>
            <p></p>
            <table class="dd">
               <tr>
                  <td></td>
                  <td>"O"</td>
                  <td>:</td>
                  <td>Both Ethernet and HSSB</td>
               </tr>
               <tr>
                  <td></td>
                  <td>"E"</td>
                  <td>:</td>
                  <td>Ethernet</td>
               </tr>
               <tr>
                  <td></td>
                  <td>"H"</td>
                  <td>:</td>
                  <td>HSSB</td>
               </tr>
               <tr>
                  <td></td>
                  <td>"X"</td>
                  <td>:</td>
                  <td>Cannot be used</td>
               </tr>
               <tr>
                  <td></td>
                  <td>"-"</td>
                  <td>:</td>
                  <td>None</td>
               </tr>
            </table>
            <p style="background-color:mistyrose;">Note) 0i-C does not support the HSSB function.</p>
            <p></p><a name="Reference"></a><p class="label">See Also</p>
            <p><a class="func" target="_parent" href="../program/cnc_upstart3.xml">cnc_upstart3</a>&nbsp;&nbsp;
               <a class="func" target="_parent" href="../program/cnc_upend3.xml">cnc_upend3</a>&nbsp;&nbsp;
               </p><a name="Example"></a><p class="label">Example(C Language)</p>
            <p></p>
            <pre>
The following program reads the specified NC program registered in CNC,
and displays its contents on the screen.

#include "fwlib32.h"
#define BUFSIZE 1280

/* prgnum is NC program number to read. */
short example( long prgnum )
{
        char buf[BUFSIZE+1] ;
        short ret ;
        long len ;
        ret = cnc_upstart3( h, 0, prgnum, prgnum ) ;
        if ( ret ) return ( ret ) ;
        do {
                len = BUFSIZE ;
                ret = cnc_upload3( h, &amp;len, buf ) ;
                if ( ret == EW_BUFFER ) {
                        continue ;
                }
                if ( ret == EW_OK ) {
                        buf[len] = '\0' ;
                        printf( "%s", buf ) ;
                }
                if ( buf[len-1] == '%' ) {
                        break ;
                }
        } while (( ret == EW_OK ) || ( ret == EW_BUFFER ));
        ret = cnc_upend3( h ) ;
        return ( ret ) ;
}
</pre>
            <p class="label">Example(C#)</p>
            <pre>
The following program reads the specified NC program registered in CNC,
and displays its contents on the screen.

class example
{
    public const short BUFSIZE = 1280;
    
    /* prgnum is NC program number to read. */
    public short sample(int prgnum)
    {
            char[] buf = new char[BUFSIZE + 1];
            short ret;
            int len;
            ret = Focas1.cnc_upstart3(h, 0, prgnum, prgnum);
            if (ret != Focas1.EW_OK) return (ret);
            do
            {
                    len = BUFSIZE;
                    ret = Focas1.cnc_upload3(h, ref len, buf);
                    if (ret == (short)Focas1.focas_ret.EW_BUFFER)
                    {
                            continue;
                    }
                    if (ret == Focas1.EW_OK)
                    {
                            buf[len] = '\0';
                            Console.Write(buf, 0, len);
                    }
                    if (buf[len - 1] == '%')
                    {
                            break;
                    }
            } while ((ret == Focas1.EW_OK) || (ret == (short)Focas1.focas_ret.EW_BUFFER));
            ret = Focas1.cnc_upend3(h);
            return (ret);
    }
}</pre>
         </div></FONT><hr>
   </body>
</html>