<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:bop2="http://www.fanuc.co.jp/develop/mmc/bop2">
   <head>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
      <title>pmc_wrpmcrng</title>
   </head>
   <body bgcolor="#FFFFFF"><FONT face="Verdana,Arial,Helvetica,sans-serif"><a name="Function Name"></a><p class="ftitle">pmc_wrpmcrng</p>
         <div class="text"><a name="Declaration"></a><p class="label">Declaration</p>
            <div class="mth">#include "fwlib32.h" or "fwlib64.h"
               <p></p>
               <prottype>FWLIBAPI short WINAPI pmc_wrpmcrng(unsigned short FlibHndl, short length,IODBPMC *buf);</prottype>
            </div><a name="Description"></a><p class="label">Description</p>
            <cmn>
               
               <p>
                  Writes the PMC data of the specified PMC address/range.<br>
                  <br>
                  This function is used to exchange the data between the application on
                  MMC function and LADDER software on PMC.
                  </p>
               </cmn><a name="Arguments"></a><p class="label">Arguments</p>
            <div class="dtarg">
               <name>FlibHndl</name>
               &nbsp;&nbsp;[&nbsp;
               <type>in</type>&nbsp;]
               </div>
            <div class="ddarg">
               <content>
                  
                  <p>
                     Specify the library handle.
                     See "<a href="handle.htm" target="_parent">Library handle</a>" for details.
                     </p>
                  </content>
            </div>
            <div class="dtarg">
               <name>length</name>
               &nbsp;&nbsp;[&nbsp;
               <type>in</type>&nbsp;]
               </div>
            <div class="ddarg">
               <content>
                  Specify the data block length.
                  
                  <table class="dd">
                     
                     <tr>
                        
                        <td>data_type is 0(byte type)</td>
                        
                        <td>:</td>
                        
                        <td>length = 8 + N</td>
                        </tr>
                     
                     <tr>
                        
                        <td>data_type is 1(word type)</td>
                        
                        <td>:</td>
                        
                        <td>length = 8 + N × 2</td>
                        </tr>
                     
                     <tr>
                        
                        <td>data_type is 2(long type)</td>
                        
                        <td>:</td>
                        
                        <td>length = 8 + N × 4</td>
                        </tr>
                     
                     <tr>
                        
                        <td>data_type is 4(32-bit floating-point type)</td>
                        
                        <td>:</td>
                        
                        <td>length = 8 + N × 4</td>
                        </tr>
                     
                     <tr>
                        
                        <td>data_type is 5(64-bit floating-point type)</td>
                        
                        <td>:</td>
                        
                        <td>length = 8 + N × 8</td>
                        </tr>
                     </table>
                  * N is the number of written data.
                  </content>
            </div>
            <div class="dtarg">
               <name>buf</name>
               &nbsp;&nbsp;[&nbsp;
               <type>in</type>&nbsp;]
               </div>
            <div class="ddarg">
               <content>
                  
                  <p>
                     Pointer to the IODBPMC structure.<br>
                     The IODBPMC structure is as follows.<br>
                     In case of using PMC memory D in Series 0i-F, 30i/31i/32i/35i-B, PMi-A, define character
                     constant "PMCMEMD" at compiling by the '-D' option.
                     </p>
                  
                  <pre>
#if defined (PMCMEMD)
typedef struct iodbpmc {
    short            type_a ;   /* Kind of PMC address */
    short            type_d ;   /* Type of the PMC data */
    unsigned short   datano_s ; /* Start PMC address number */
    unsigned short   datano_e ; /* End PMC address number */
    union {
        char    cdata[N] ;/* The PMC data(byte type) */
        short   idata[N] ;/*             (word type) */
        long    ldata[N] ;/*             (long type) */
        float   fdata[N] ; /*            (32-bit floating-point type)*/
        double  dfdata[N]; /*            (64-bit floating-point type)*/
    } u ;           /* N is the number of read data */
} IODBPMC ;
#else
typedef struct  iodbpmc {
    short   type_a ;    /* Kind of PMC address */
    short   type_d ;    /* Type of the PMC data */
    short   datano_s ;  /* Start PMC address number */
    short   datano_e ;  /* End PMC address number */
    union {
        char    cdata[N] ;/* The PMC data(byte type) */
        short   idata[N] ;/*             (word type) */
        long    ldata[N] ;/*             (long type) */
        float   fdata[N] ; /*            (32-bit floating-point type)*/
        double  dfdata[N]; /*            (64-bit floating-point type)*/
    } u ;           /* N is the number of written data */
} IODBPMC ;
#endif
</pre>
                  
                  <dl>
                     
                     <dt>type_a</dt>
                     
                     <dd>Specify the identification code corresponding to the kind of the PMC address.</dd>
                     
                     <dt>type_d</dt>
                     
                     <dd>Specify the type of the PMC data.<br>
                        It must be the same one as the type of data of the PMC side.</dd>
                     
                     <table class="dd">
                        
                        <tr>
                           <td>0</td>
                           <td>:</td>
                           <td>Byte type</td>
                        </tr>
                        
                        <tr>
                           <td>1</td>
                           <td>:</td>
                           <td>Word type</td>
                        </tr>
                        
                        <tr>
                           <td>2</td>
                           <td>:</td>
                           <td>Long type</td>
                        </tr>
                        
                        <tr>
                           <td>4</td>
                           <td>:</td>
                           <td>32-bit floating-point type(30i-B Series/0i-F/PMi-A only)</td>
                        </tr>
                        
                        <tr>
                           <td>5</td>
                           <td>:</td>
                           <td>64-bit floating-point type(30i-B Series/0i-F/PMi-A only)</td>
                        </tr>
                        </table>
                     
                     <dt>datano_s</dt>
                     
                     <dd>Specify the start PMC address number.</dd>
                     
                     <dt>datano_e</dt>
                     
                     <dd>Specify the end PMC address number.</dd>
                     </dl>
                  See "The referenceable range of PMC data" of "Read PMC data(area specified)
                  (<a href="../pmc/pmc_rdpmcrng.xml" target="_parent">pmc_rdpmcrng</a>)" about the kind of the
                  PMC address, the start address, and the end address.
                  </content>
            </div>
            <add>
               
               <p class="label">Example of specifying argument</p>
               
               <ol>
                  
                  <li>250 is written in D0100(It is assumed the word type)</li>
                  
                  <table class="dd">
                     
                     <tr>
                        
                        <td>buf.type_a</td>
                        
                        <td>9</td>
                        </tr>
                     
                     <tr>
                        
                        <td>buf.type_d</td>
                        
                        <td>1</td>
                        </tr>
                     
                     <tr>
                        
                        <td>buf.datano_s</td>
                        
                        <td>100</td>
                        </tr>
                     
                     <tr>
                        
                        <td>buf.datano_e</td>
                        
                        <td>101</td>
                        </tr>
                     
                     <tr>
                        
                        <td>length</td>
                        
                        <td>8+2×1 (=10)</td>
                        </tr>
                     
                     <tr>
                        
                        <td>buf.u.idata[0]</td>
                        
                        <td>250</td>
                        </tr>
                     </table>
                  
                  
                  <li>0 is written all of R0200,..,R0209(It is assumed byte type)</li>
                  
                  <table class="dd">
                     
                     <tr>
                        
                        <td>buf.type_a</td>
                        
                        <td>5</td>
                        </tr>
                     
                     <tr>
                        
                        <td>buf.type_d</td>
                        
                        <td>0</td>
                        </tr>
                     
                     <tr>
                        
                        <td>buf.datano_s</td>
                        
                        <td>200</td>
                        </tr>
                     
                     <tr>
                        
                        <td>buf.datano_e</td>
                        
                        <td>209</td>
                        </tr>
                     
                     <tr>
                        
                        <td>length</td>
                        
                        <td>8+1×10 (=18)</td>
                        </tr>
                     
                     <tr>
                        
                        <td>buf.u.cdata[0]<br>
                           ,..,buf.u.cdata[9]</td>
                        
                        <td>0 all</td>
                        </tr>
                     </table>
                  
                  
                  <li>1.1 is written in D0100(It is assumed 32-bit floating-point type)</li>
                  
                  <table class="dd">
                     
                     <tr>
                        
                        <td>buf.type_a</td>
                        
                        <td>9</td>
                        </tr>
                     
                     <tr>
                        
                        <td>buf.type_d</td>
                        
                        <td>4</td>
                        </tr>
                     
                     <tr>
                        
                        <td>buf.datano_s</td>
                        
                        <td>100</td>
                        </tr>
                     
                     <tr>
                        
                        <td>buf.datano_e</td>
                        
                        <td>103</td>
                        </tr>
                     
                     <tr>
                        
                        <td>length</td>
                        
                        <td>8+4×1 (=12)</td>
                        </tr>
                     
                     <tr>
                        
                        <td>buf.u.idata[0]</td>
                        
                        <td>1.1</td>
                        </tr>
                     </table>
                  
                  
                  <li>-2.2 and 33.3 are written in R104, R112(It is assumed 64-bit floating-point type)</li>
                  
                  <table class="dd">
                     
                     <tr>
                        
                        <td>buf.type_a</td>
                        
                        <td>5</td>
                        </tr>
                     
                     <tr>
                        
                        <td>buf.type_d</td>
                        
                        <td>5</td>
                        </tr>
                     
                     <tr>
                        
                        <td>buf.datano_s</td>
                        
                        <td>104</td>
                        </tr>
                     
                     <tr>
                        
                        <td>buf.datano_e</td>
                        
                        <td>119</td>
                        </tr>
                     
                     <tr>
                        
                        <td>length</td>
                        
                        <td>8+8×2 (=24)</td>
                        </tr>
                     
                     <tr>
                        
                        <td>buf.u.idata[0]</td>
                        
                        <td>-2.2</td>
                        </tr>
                     
                     <tr>
                        
                        <td>buf.u.idata[1]</td>
                        
                        <td>33.3</td>
                        </tr>
                     </table>
                  </ol>
               </add><a name="Return"></a><p class="label">Return</p>
            <p>EW_OK is returned on successful completion, otherwise any value except EW_OK is returned.</p>
            <p>The major error codes are as follows.</p>
            <table border="1">
               <colgroup align="center" valign="top"></colgroup>
               <colgroup align="left" valign="top"></colgroup>
               <colgroup align="left" valign="top"></colgroup>
               <tr>
                  <th>Return code</th>
                  <th>Meaning/Error handling</th>
               </tr>
               <tr>
                  <td>
                     <name>EW_NOPMC</name><br>(1)</td>
                  <td>
                     <content>
                        There is no PMC.
                        </content>
                  </td>
               </tr>
               <tr>
                  <td>
                     <name>EW_LENGTH</name><br>(2)</td>
                  <td>
                     <content>
                        Data block length error<br>
                        Size of IODBPMC structure(length) is wrong.
                        </content>
                  </td>
               </tr>
               <tr>
                  <td>
                     <name>EW_RANGE</name><br>(3)</td>
                  <td>
                     <content>
                        Address range error<br>
                        Address range error PMC address number(datano_s,datano_e) is wrong.
                        </content>
                  </td>
               </tr>
               <tr>
                  <td>
                     <name>EW_ATTRIB</name><br>(4)</td>
                  <td>
                     <content>
                        Data attribute error<br>
                        Kind of PMC address(type_a) or type of PMC data (type_d) is wrong.
                        </content>
                  </td>
               </tr>
               <tr>
                  <td>
                     <name>EW_PASSWD</name><br>(17)</td>
                  <td>
                     <content>
                        The data of specified range cannot be written because the data is protected. <br>
                        (Series 16i/18i/21i, 0i-A/B/C) 
                        </content>
                  </td>
               </tr>
            </table>
            <p></p>
            <p>
               As for the other return codes or the details, see 
               
               "<a href="errcode.htm" target="_parent">Return status of Data window function</a>"
               </p><a name="CNC option"></a><p class="label">CNC option</p>
            <p></p>
            <p>For HSSB connection,</p>
            <ul>
               <p>
                  <hssb>The extended driver/library function is necessary.</hssb>
               </p>
            </ul>
            <p>For Ethernet connection,</p>
            <ul>
               <p>
                  <ethr>
                     <p>The Ethernet function and the extended driver/library function are necessary.</p>
                     
                     <p>However, in case of Series 16i/18i/21i-B, 0i-B/C/D/F, Series 30i and PMi-A, the required
                        CNC option is as follows.</p>
                     
                     <p>When Embedded Ethernet is used,</p>
                     
                     <p>
                        <ul>above two optional functions are not required.</ul>
                     </p>
                     
                     <p>When Ethernet board is used,</p>
                     
                     <p>
                        <ul>only Ethernet function is required.</ul>
                     </p>
                     </ethr>
               </p>
            </ul>
            <p></p><a name="CNC parameter"></a><p class="label">CNC parameter</p>
            <p>This function is not related to CNC parameter.</p><a name="CNC mode"></a><p class="label">CNC mode</p>
            <p>This function can be used in any CNC mode.</p><a name="Available CNC"></a><p class="label">Available CNC</p>
            <table border="1">
               <colgroup width="100em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <tr>
                  <th></th>
                  <th>0i-A</th>
                  <th>0i-B/C(Note)</th>
                  <th>0i-D</th>
                  <th>0i-F</th>
                  <th>15</th>
                  <th>15i</th>
                  <th>16</th>
                  <th>18</th>
                  <th>21</th>
                  <th>16i-A</th>
                  <th>18i-A</th>
                  <th>21i-A</th>
                  <th>16i-B</th>
                  <th>18i-B</th>
                  <th>21i-B</th>
                  <th>30i-A</th>
                  <th>30i-B</th>
               </tr>
               <tr>
                  <td>M (Machining)</td>
                  <td class="support">
                     <fs0ia>H</fs0ia>
                  </td>
                  <td class="support">
                     <fs0ib>O</fs0ib>
                  </td>
                  <td class="support">
                     <fs0id>O</fs0id>
                  </td>
                  <td class="support">
                     <fs0if>O</fs0if>
                  </td>
                  <td class="support">
                     <fs15>H</fs15>
                  </td>
                  <td class="support">
                     <fs15i>O</fs15i>
                  </td>
                  <td class="support">
                     <fs16>H</fs16>
                  </td>
                  <td class="support">
                     <fs18>H</fs18>
                  </td>
                  <td class="support">
                     <fs21>H</fs21>
                  </td>
                  <td class="support">
                     <fs16ia>O</fs16ia>
                  </td>
                  <td class="support">
                     <fs18ia>O</fs18ia>
                  </td>
                  <td class="support">
                     <fs21ia>O</fs21ia>
                  </td>
                  <td class="support">
                     <fs16ib>O</fs16ib>
                  </td>
                  <td class="support">
                     <fs18ib>O</fs18ib>
                  </td>
                  <td class="support">
                     <fs21ib>O</fs21ib>
                  </td>
                  <td class="support">
                     <fs30ia>O</fs30ia>
                  </td>
                  <td class="support">
                     <fs30ib>O</fs30ib>
                  </td>
               </tr>
               <tr>
                  <td>T (Turning)  </td>
                  <td class="support">
                     <fs0ia>H</fs0ia>
                  </td>
                  <td class="support">
                     <fs0ib>O</fs0ib>
                  </td>
                  <td class="support">
                     <fs0id>O</fs0id>
                  </td>
                  <td class="support">
                     <fs0if>O</fs0if>
                  </td>
                  <td class="support">
                     <fs15>H</fs15>
                  </td>
                  <td>
                     -
                     </td>
                  <td class="support">
                     <fs16>H</fs16>
                  </td>
                  <td class="support">
                     <fs18>H</fs18>
                  </td>
                  <td class="support">
                     <fs21>H</fs21>
                  </td>
                  <td class="support">
                     <fs16ia>O</fs16ia>
                  </td>
                  <td class="support">
                     <fs18ia>O</fs18ia>
                  </td>
                  <td class="support">
                     <fs21ia>O</fs21ia>
                  </td>
                  <td class="support">
                     <fs16ib>O</fs16ib>
                  </td>
                  <td class="support">
                     <fs18ib>O</fs18ib>
                  </td>
                  <td class="support">
                     <fs21ib>O</fs21ib>
                  </td>
                  <td class="support">
                     <fs30ia>O</fs30ia>
                  </td>
                  <td class="support">
                     <fs30ib>O</fs30ib>
                  </td>
               </tr>
               <tr>
                  <td>LC (Loader)  </td>
                  <td>
                     -
                     </td>
                  <td>
                     -
                     </td>
                  <td>
                     -
                     </td>
                  <td>
                     -
                     </td>
                  <td>
                     -
                     </td>
                  <td>
                     -
                     </td>
                  <td class="support">
                     <fs16>H</fs16>
                  </td>
                  <td class="support">
                     <fs18>H</fs18>
                  </td>
                  <td class="support">
                     <fs21>H</fs21>
                  </td>
                  <td class="support">
                     <fs16ia>H</fs16ia>
                  </td>
                  <td class="support">
                     <fs18ia>H</fs18ia>
                  </td>
                  <td class="support">
                     <fs21ia>H</fs21ia>
                  </td>
                  <td class="support">
                     <fs16ib>H</fs16ib>
                  </td>
                  <td class="support">
                     <fs18ib>H</fs18ib>
                  </td>
                  <td class="support">
                     <fs21ib>H</fs21ib>
                  </td>
                  <td>
                     -
                     </td>
                  <td>
                     -
                     </td>
               </tr>
            </table>
            <p></p>
            <table border="1">
               <colgroup width="100em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <tr>
                  <th></th>
                  <th>0i-D</th>
                  <th>0i-F</th>
                  <th>16i</th>
                  <th>18i</th>
                  <th>30i-A</th>
                  <th>30i-B</th>
               </tr>
               <tr>
                  <td>P (Punch press)</td>
                  <td class="support">
                     <fs0id>O</fs0id>
                  </td>
                  <td class="support">
                     <fs0if>O</fs0if>
                  </td>
                  <td class="support">
                     <fs16i>O</fs16i>
                  </td>
                  <td class="support">
                     <fs18i>O</fs18i>
                  </td>
                  <td>
                     -
                     </td>
                  <td class="support">
                     <fs30ib>O</fs30ib>
                  </td>
               </tr>
               <tr>
                  <td>L (Laser)      </td>
                  <td>
                     -
                     </td>
                  <td>
                     -
                     </td>
                  <td class="support">
                     <fs16i>O</fs16i>
                  </td>
                  <td>
                     -
                     </td>
                  <td>
                     -
                     </td>
                  <td class="support">
                     <fs30ib>O</fs30ib>
                  </td>
               </tr>
               <tr>
                  <td>W (Wire)       </td>
                  <td>
                     -
                     </td>
                  <td>
                     -
                     </td>
                  <td class="support">
                     <fs16i>O</fs16i>
                  </td>
                  <td class="support">
                     <fs18i>O</fs18i>
                  </td>
                  <td class="support">
                     <fs30ia>O</fs30ia>
                  </td>
                  <td class="support">
                     <fs30ib>O</fs30ib>
                  </td>
               </tr>
            </table>
            <p></p><br><table border="1">
               <colgroup width="100em"></colgroup>
               <colgroup align="center" width="86em"></colgroup>
               <colgroup align="center" width="86em"></colgroup>
               <tr>
                  <td>Power Mate i-D</td>
                  <td class="support">
                     <d>O</d>
                  </td>
               </tr>
               <tr>
                  <td>Power Mate i-H</td>
                  <td class="support">
                     <h>O</h>
                  </td>
               </tr>
               <tr>
                  <td>Power Motion i-A</td>
                  <td class="support"><a>O</a></td>
               </tr>
            </table>
            <p></p>
            <table class="dd">
               <tr>
                  <td></td>
                  <td>"O"</td>
                  <td>:</td>
                  <td>Both Ethernet and HSSB</td>
               </tr>
               <tr>
                  <td></td>
                  <td>"E"</td>
                  <td>:</td>
                  <td>Ethernet</td>
               </tr>
               <tr>
                  <td></td>
                  <td>"H"</td>
                  <td>:</td>
                  <td>HSSB</td>
               </tr>
               <tr>
                  <td></td>
                  <td>"X"</td>
                  <td>:</td>
                  <td>Cannot be used</td>
               </tr>
               <tr>
                  <td></td>
                  <td>"-"</td>
                  <td>:</td>
                  <td>None</td>
               </tr>
            </table>
            <p style="background-color:mistyrose;">Note) 0i-C does not support the HSSB function.</p>
            <p></p><a name="Reference"></a><p class="label">See Also</p>
            <p><a class="func" target="_parent" href="../pmc/pmc_rdpmcrng.xml">pmc_rdpmcrng</a>&nbsp;&nbsp;
               <a class="func" target="_parent" href="../pmc/pmc_rdpmcinfo.xml">pmc_rdpmcinfo</a>&nbsp;&nbsp;
               </p><a name="Example"></a><p class="label">Example(C Language)</p>
            <p></p>
            <pre>
The following program writes the PMC data within the specified
PMC address range.

#include "fwlib32.h"

/* start/end are start/end PMC address to be written. */
/* values is array of value to be written. */
short example( short start, short end, char* values )
{
        IODBPMC *pmcrng;
        short ret, idx;
        unsigned short length;

        length = 8 + (end - start + 1);
        pmcrng = (IODBPMC *)malloc( length );
        pmcrng-&gt;type_a = 0;                       // In case that kind of PMC address is G
        pmcrng-&gt;type_d = 0;                       // In case that type of PMC data is Byte
        pmcrng-&gt;datano_s = start;
        pmcrng-&gt;datano_e = end;
        for (idx = 0; idx &lt; end - start + 1; idx++)
        {
                pmcrng-&gt;u.cdata[idx] = values[idx];
        }

        ret = pmc_wrpmcrng( h, length, pmcrng );
        if ( ret )
        {
                printf( "ERROR!(%d)\n", ret );
        }
        free( pmcrng ) ;
        return ( ret ) ;
}
</pre>
            <p class="label">Example(C#)</p>
            <pre>
The following program writes the PMC data within the specified
PMC address range.

class example
{
    /* start/end are start/end PMC address to be written. */
    /* values is array of value to be written. */
    public short sample(short start, short end, byte[] value)
    {
        Focas1.IODBPMC0 pmcHead = new Focas1.IODBPMC0();
        short ret, idx;
        ushort length;

        length = (ushort)(8 + (end - start + 1));
        byte[] bytes = new byte[length];
        IntPtr ptrHead = Marshal.AllocCoTaskMem(Marshal.SizeOf(pmcHead));

        pmcHead.type_a = 0;                    // In case that kind of PMC address is G
        pmcHead.type_d = 0;                    // In case that type of PMC data is Byte
        pmcHead.datano_s = start;
        pmcHead.datano_e = end;
        Marshal.StructureToPtr(pmcHead, ptrHead, false);
        Marshal.Copy(ptrHead, bytes, 0, 8);
        for (idx = 0; idx &lt; end - start + 1; idx++)
        {
            bytes[8 + idx] = value[idx];
        }

        ret = Focas1.pmc_wrpmcrng(h, length, bytes);
        if (ret != Focas1.EW_OK)
        {
            Console.WriteLine("ERROR!({0})", ret);
        }
        Marshal.FreeCoTaskMem(ptrHead);
        return (ret);
    }
}
}</pre>
         </div></FONT><hr>
   </body>
</html>