<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:bop2="http://www.fanuc.co.jp/develop/mmc/bop2">
   <head>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
      <title>cnc_wrmacror</title>
   </head>
   <body bgcolor="#FFFFFF"><FONT face="Verdana,Arial,Helvetica,sans-serif"><a name="Function Name"></a><p class="ftitle">cnc_wrmacror</p>
         <div class="text"><a name="Declaration"></a><p class="label">Declaration</p>
            <div class="mth">#include "fwlib32.h" or "fwlib64.h"
               <p></p>
               <prottype>FWLIBAPI short WINAPI cnc_wrmacror(unsigned short FlibHndl, short length, IODBMR *macror);</prottype>
            </div><a name="Description"></a><p class="label">Description</p>
            <cmn>
               
               <p>Writes the custom macro variable specified by "datano_s", "datano_e". The data must
                  be stored in "IODBMR" with signed binary format.</p>
               
               
               <p>The kind of custom macro variable is as follows. The local variable cannot be written.</p>
               
               
               <ol>
                  
                  <li>Common variable (#100,..,#999)</li>
                  See the description of <a href="../ncdata/cnc_rdmacroinfo.xml" target="_parent">cnc_rdmacroinfo</a> function about the available range of common variables.<br>
                  </ol>
               
               
               <p>It is possible to exchange the type of macro variable by <a href="../ncdata/cnc_setmactype.xml" target="_parent">cnc_setmactype</a> function.</p>
               
               
               <ul>
                  
                  <li>decimal form floating-point type (data format=M*10**(-E))</li>
                  
                  <table>
                     
                     <colgroup valign="top">
                        
                        <colgroup valign="top">
                           
                           <colgroup valign="top">
                              
                              <tr>
                                 
                                 <td>mcr_val</td>
                                 
                                 <td>:</td>
                                 
                                 <td>value of variable(=M)<br>
                                    4-byte binary data with sign<br>
                                    (available range:999999999,..,-999999999)</td>
                                 </tr>
                              
                              <tr>
                                 
                                 <td>dec_val</td>
                                 
                                 <td>:</td>
                                 
                                 <td>number of places of decimals(=E)<br>
                                    2-byte binary data with sign<br>
                                    (available range:-128,..,127)</td>
                                 </tr>
                              </colgroup>
                           </colgroup>
                        </colgroup>
                     </table>
                  <br>
                  
                  <li>binary form floating-point type (data format=M*2**(-E))</li>
                  
                  <table>
                     
                     <colgroup valign="top">
                        
                        <colgroup valign="top">
                           
                           <colgroup valign="top">
                              
                              <tr>
                                 
                                 <td>mcr_val</td>
                                 
                                 <td>:</td>
                                 
                                 <td>numerical part of variable(=M)<br>
                                    4-byte binary data with sign<br>
                                    (available range:No limitation)</td>
                                 </tr>
                              
                              <tr>
                                 
                                 <td>dec_val</td>
                                 
                                 <td>:</td>
                                 
                                 <td>exponent part of variable(=E)<br>
                                    2-byte binary data with sign<br>
                                    (available range:-128,..,127)</td>
                                 </tr>
                              </colgroup>
                           </colgroup>
                        </colgroup>
                     </table>
                  
                  </ul>
               
               
               <p>The value of an undefined variable is called "vacant", and it is expressed as follows
                  both at decimal form floating-point type and at binary form floating-point type.</p>
               
               
               <blockquote>
                  
                  <p>mcr_val = 0<br>
                     dec_val = -1</p>
                  </blockquote>
               
               
               <p>See "OPERATOR'S MANUAL" of CNC for details of the custom macro variable.</p>
               </cmn><a name="Arguments"></a><p class="label">Arguments</p>
            <div class="dtarg">
               <name>FlibHndl</name>
               &nbsp;&nbsp;[&nbsp;
               <type>in</type>&nbsp;]
               </div>
            <div class="ddarg">
               <content>
                  
                  <p>
                     Specify the library handle. See "<a href="handle.htm" target="_parent">Library handle</a>" for details.
                     </p>
                  </content>
            </div>
            <div class="dtarg">
               <name>length</name>
               &nbsp;&nbsp;[&nbsp;
               <type>in</type>&nbsp;]
               </div>
            <div class="ddarg">
               <content>
                  
                  <p>Specify the data block length (size of IODBMR structure).</p>
                  
                  
                  <p class="dd">8+8*(Number of custom macro variable)</p>
                  
                  
                  <p><b>IODBMR</b></p>
                  
                  
                  <p><img src="ncdata/nmacro.gif"></p>
                  
                  
                  <p>N : Number of custom macro variable</p>
                  
                  </content>
            </div>
            <div class="dtarg">
               <name>macror</name>
               &nbsp;&nbsp;[&nbsp;
               <type>in</type>&nbsp;]
               </div>
            <div class="ddarg">
               <content>
                  
                  <p>Pointer to the IODBMR structure including the custom macro variable. The IODBMR structure
                     is as follows.</p>
                  
                  
                  <pre>
typedef struct iodbmr {
    short datano_s; /* start custom macro variable number*/
    short dummy;    /* (not used) */
    short datano_e; /* end custom macro variable number */
    struct {
        long  mcr_val; /* value of custom macro var. */
        short dec_val; /* number of places of decimals*/
    } data[N];         /* N : number of variable */
} IODBMR;
</pre>
                  
                  <dl>
                     
                     <dt>datano_s</dt>
                     
                     <dd>Specify the start custom macro variable number.</dd>
                     <br>
                     
                     <dt>datano_e</dt>
                     
                     <dd>Specify the end custom macro variable number.</dd>
                     <br>
                     
                     <dt>mcr_val</dt>
                     
                     <dd>Specify the value of variable/numerical part of variable.</dd>
                     <br>
                     
                     <dt>dec_val</dt>
                     
                     <dd>Specify the number of places of decimals/exponent part of variable.</dd>
                     </dl>
                  </content>
            </div><a name="Return"></a><p class="label">Return</p>
            <p>EW_OK is returned on successful completion, otherwise any value except EW_OK is returned.</p>
            <p>The major error codes are as follows.</p>
            <table border="1">
               <colgroup align="center" valign="top"></colgroup>
               <colgroup align="left" valign="top"></colgroup>
               <colgroup align="left" valign="top"></colgroup>
               <tr>
                  <th>Return code</th>
                  <th>Meaning/Error handling</th>
               </tr>
               <tr>
                  <td>
                     <name>EW_LENGTH</name><br>(2)</td>
                  <td>
                     <content>Data block length error<br>Size of IODBMR structure(length) is wrong.</content>
                  </td>
               </tr>
               <tr>
                  <td>
                     <name>EW_NUMBER</name><br>(3)</td>
                  <td>
                     <content>Data number error<br>Custom macro variable number(datano_s, datano_e) is wrong.</content>
                  </td>
               </tr>
               <tr>
                  <td>
                     <name>EW_DATA</name><br>(5)</td>
                  <td>
                     <content>Data error<br>Value of custom macro variable(mcr_val, dec_val) is out of available range.</content>
                  </td>
               </tr>
               <tr>
                  <td>
                     <name>EW_NOOPT</name><br>(6)</td>
                  <td>
                     <content>No option<br>This function needs the custom macro option.</content>
                  </td>
               </tr>
               <tr>
                  <td>
                     <name>EW_PROT</name><br>(7)</td>
                  <td>
                     <content>protection error (30i/31i/32i, 0i-D/F, PMi-A only)<br>The variable is read-only. </content>
                  </td>
               </tr>
            </table>
            <p></p>
            <p>
               As for the other return codes or the details, see 
               
               "<a href="errcode.htm" target="_parent">Return status of Data window function</a>"
               </p><a name="CNC option"></a><p class="label">CNC option</p>
            <p></p>
            <p>This function need the following CNC option.</p>
            <ul>
               <p>
                  <need>
                     
                     <li>Series 15/15i, 30i/31i/32i, 0i-D, PMi-A</li>
                     Custom macro<br>
                     <br>
                     
                     <li>Series 16/18/21, 16i/18i/21i, 0i-A/B/C, Power Mate i</li>
                     Custom macro B<br>
                     <br>
                     </need>
               </p>
            </ul>
            <p>And this function is related to the following CNC option.</p>
            <ul>
               <p>
                  <type>
                     
                     <li>Series 15</li>
                     Custom macro common variable 200 sets<br>
                     Custom macro common variable 300 sets<br>
                     Custom macro common variable 600 sets<br>
                     <br>
                     
                     <li>Series 15i</li>
                     Custom macro common variable 900 sets<br>
                     <br>
                     
                     <li>Series 16/18/21, 16i/18i/21i, 0i-A/B/C, Power Mate i, PMi-A</li>
                     Custom macro common variable extension<br>
                     <br>
                     
                     <li>Series 0i-F</li>
                     Embedded macro<br>
                     <br>
                     
                     <li>Series 30i/31i/32i</li>
                     Custom macro common variable extension<br>
                     Embedded macro<br>
                     <br>
                     </type>
               </p>
            </ul>
            <p>For HSSB connection,</p>
            <ul>
               <p>
                  <hssb>The extended driver/library function is necessary.</hssb>
               </p>
            </ul>
            <p>For Ethernet connection,</p>
            <ul>
               <p>
                  <ethr>
                     <p>The Ethernet function and the extended driver/library function are necessary.</p>
                     
                     <p>However, in case of Series 16i/18i/21i-B, 0i-B/C/D/F, Series 30i and PMi-A, the required
                        CNC option is as follows.</p>
                     
                     <p>When Embedded Ethernet is used,</p>
                     
                     <p>
                        <ul>above two optional functions are not required.</ul>
                     </p>
                     
                     <p>When Ethernet board is used,</p>
                     
                     <p>
                        <ul>only Ethernet function is required.</ul>
                     </p>
                     </ethr>
               </p>
            </ul>
            <p></p><a name="CNC parameter"></a><p class="label">CNC parameter</p>
            <p>This function is related to the following CNC parameter.<br>
               See the manual of CNC parameter for details.</p>
            <p>
               <type>
                  
                  <ul>
                     
                     <li>Series 16i/18i-W</li>
                     6005#4,#5,#7 (influenced by setting)
                     
                     <li>Series 30i/31i/32i, 0i-D/F, PMi-A</li>
                     6031, 6032 (influenced by setting)
                     </ul>
                  </type>
            </p>
            <p></p><a name="CNC mode"></a><p class="label">CNC mode</p>
            <p>This function can be used in any CNC mode.</p><a name="Available CNC"></a><p class="label">Available CNC</p>
            <table border="1">
               <colgroup width="100em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <tr>
                  <th></th>
                  <th>0i-A</th>
                  <th>0i-B/C(Note)</th>
                  <th>0i-D</th>
                  <th>0i-F</th>
                  <th>15</th>
                  <th>15i</th>
                  <th>16</th>
                  <th>18</th>
                  <th>21</th>
                  <th>16i-A</th>
                  <th>18i-A</th>
                  <th>21i-A</th>
                  <th>16i-B</th>
                  <th>18i-B</th>
                  <th>21i-B</th>
                  <th>30i-A</th>
                  <th>30i-B</th>
               </tr>
               <tr>
                  <td>M (Machining)</td>
                  <td class="support">
                     <fs0ia>H</fs0ia>
                  </td>
                  <td class="support">
                     <fs0ib>O</fs0ib>
                  </td>
                  <td class="support">
                     <fs0id>O</fs0id>
                  </td>
                  <td class="support">
                     <fs0if>O</fs0if>
                  </td>
                  <td class="support">
                     <fs15>H</fs15>
                  </td>
                  <td class="support">
                     <fs15i>O</fs15i>
                  </td>
                  <td class="support">
                     <fs16>H</fs16>
                  </td>
                  <td class="support">
                     <fs18>H</fs18>
                  </td>
                  <td class="support">
                     <fs21>H</fs21>
                  </td>
                  <td class="support">
                     <fs16ia>O</fs16ia>
                  </td>
                  <td class="support">
                     <fs18ia>O</fs18ia>
                  </td>
                  <td class="support">
                     <fs21ia>O</fs21ia>
                  </td>
                  <td class="support">
                     <fs16ib>O</fs16ib>
                  </td>
                  <td class="support">
                     <fs18ib>O</fs18ib>
                  </td>
                  <td class="support">
                     <fs21ib>O</fs21ib>
                  </td>
                  <td class="support">
                     <fs30ia>O</fs30ia>
                  </td>
                  <td class="support">
                     <fs30ib>O</fs30ib>
                  </td>
               </tr>
               <tr>
                  <td>T (Turning)  </td>
                  <td class="support">
                     <fs0ia>H</fs0ia>
                  </td>
                  <td class="support">
                     <fs0ib>O</fs0ib>
                  </td>
                  <td class="support">
                     <fs0id>O</fs0id>
                  </td>
                  <td class="support">
                     <fs0if>O</fs0if>
                  </td>
                  <td class="support">
                     <fs15>H</fs15>
                  </td>
                  <td>
                     -
                     </td>
                  <td class="support">
                     <fs16>H</fs16>
                  </td>
                  <td class="support">
                     <fs18>H</fs18>
                  </td>
                  <td class="support">
                     <fs21>H</fs21>
                  </td>
                  <td class="support">
                     <fs16ia>O</fs16ia>
                  </td>
                  <td class="support">
                     <fs18ia>O</fs18ia>
                  </td>
                  <td class="support">
                     <fs21ia>O</fs21ia>
                  </td>
                  <td class="support">
                     <fs16ib>O</fs16ib>
                  </td>
                  <td class="support">
                     <fs18ib>O</fs18ib>
                  </td>
                  <td class="support">
                     <fs21ib>O</fs21ib>
                  </td>
                  <td class="support">
                     <fs30ia>O</fs30ia>
                  </td>
                  <td class="support">
                     <fs30ib>O</fs30ib>
                  </td>
               </tr>
               <tr>
                  <td>LC (Loader)  </td>
                  <td>
                     -
                     </td>
                  <td>
                     -
                     </td>
                  <td>
                     -
                     </td>
                  <td>
                     -
                     </td>
                  <td>
                     -
                     </td>
                  <td>
                     -
                     </td>
                  <td class="support">
                     <fs16>H</fs16>
                  </td>
                  <td class="support">
                     <fs18>H</fs18>
                  </td>
                  <td class="support">
                     <fs21>H</fs21>
                  </td>
                  <td class="support">
                     <fs16ia>H</fs16ia>
                  </td>
                  <td class="support">
                     <fs18ia>H</fs18ia>
                  </td>
                  <td class="support">
                     <fs21ia>H</fs21ia>
                  </td>
                  <td class="support">
                     <fs16ib>H</fs16ib>
                  </td>
                  <td class="support">
                     <fs18ib>H</fs18ib>
                  </td>
                  <td class="support">
                     <fs21ib>H</fs21ib>
                  </td>
                  <td>
                     -
                     </td>
                  <td>
                     -
                     </td>
               </tr>
            </table>
            <p></p>
            <table border="1">
               <colgroup width="100em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <colgroup align="center" width="40em"></colgroup>
               <tr>
                  <th></th>
                  <th>0i-D</th>
                  <th>0i-F</th>
                  <th>16i</th>
                  <th>18i</th>
                  <th>30i-A</th>
                  <th>30i-B</th>
               </tr>
               <tr>
                  <td>P (Punch press)</td>
                  <td class="support">
                     <fs0id>O</fs0id>
                  </td>
                  <td class="support">
                     <fs0if>O</fs0if>
                  </td>
                  <td class="support">
                     <fs16i>O</fs16i>
                  </td>
                  <td class="support">
                     <fs18i>O</fs18i>
                  </td>
                  <td>
                     -
                     </td>
                  <td class="support">
                     <fs30ib>O</fs30ib>
                  </td>
               </tr>
               <tr>
                  <td>L (Laser)      </td>
                  <td>
                     -
                     </td>
                  <td>
                     -
                     </td>
                  <td class="support">
                     <fs16i>O</fs16i>
                  </td>
                  <td>
                     -
                     </td>
                  <td>
                     -
                     </td>
                  <td class="support">
                     <fs30ib>O</fs30ib>
                  </td>
               </tr>
               <tr>
                  <td>W (Wire)       </td>
                  <td>
                     -
                     </td>
                  <td>
                     -
                     </td>
                  <td class="support">
                     <fs16i>O</fs16i>
                  </td>
                  <td class="support">
                     <fs18i>O</fs18i>
                  </td>
                  <td class="support">
                     <fs30ia>O</fs30ia>
                  </td>
                  <td class="support">
                     <fs30ib>O</fs30ib>
                  </td>
               </tr>
            </table>
            <p></p><br><table border="1">
               <colgroup width="100em"></colgroup>
               <colgroup align="center" width="86em"></colgroup>
               <colgroup align="center" width="86em"></colgroup>
               <tr>
                  <td>Power Mate i-D</td>
                  <td class="support">
                     <d>O</d>
                  </td>
               </tr>
               <tr>
                  <td>Power Mate i-H</td>
                  <td class="support">
                     <h>O</h>
                  </td>
               </tr>
               <tr>
                  <td>Power Motion i-A</td>
                  <td class="support"><a>O</a></td>
               </tr>
            </table>
            <p></p>
            <table class="dd">
               <tr>
                  <td></td>
                  <td>"O"</td>
                  <td>:</td>
                  <td>Both Ethernet and HSSB</td>
               </tr>
               <tr>
                  <td></td>
                  <td>"E"</td>
                  <td>:</td>
                  <td>Ethernet</td>
               </tr>
               <tr>
                  <td></td>
                  <td>"H"</td>
                  <td>:</td>
                  <td>HSSB</td>
               </tr>
               <tr>
                  <td></td>
                  <td>"X"</td>
                  <td>:</td>
                  <td>Cannot be used</td>
               </tr>
               <tr>
                  <td></td>
                  <td>"-"</td>
                  <td>:</td>
                  <td>None</td>
               </tr>
            </table>
            <p style="background-color:mistyrose;">Note) 0i-C does not support the HSSB function.</p>
            <p>
               <add><b></b></add>
            </p><a name="Reference"></a><p class="label">See Also</p>
            <p><a class="func" target="_parent" href="../ncdata/cnc_rdmacro.xml">cnc_rdmacro</a>&nbsp;&nbsp;
               <a class="func" target="_parent" href="../ncdata/cnc_wrmacro.xml">cnc_wrmacro</a>&nbsp;&nbsp;
               <a class="func" target="_parent" href="../ncdata/cnc_rdmacror.xml">cnc_rdmacror</a>&nbsp;&nbsp;
               <a class="func" target="_parent" href="../ncdata/cnc_rdmacror2.xml">cnc_rdmacror2</a>&nbsp;&nbsp;
               <a class="func" target="_parent" href="../ncdata/cnc_wrmacror2.xml">cnc_wrmacror2</a>&nbsp;&nbsp;
               <a class="func" target="_parent" href="../ncdata/cnc_rdmacroinfo.xml">cnc_rdmacroinfo</a>&nbsp;&nbsp;
               <a class="func" target="_parent" href="../ncdata/cnc_getmactype.xml">cnc_getmactype</a>&nbsp;&nbsp;
               <a class="func" target="_parent" href="../ncdata/cnc_setmactype.xml">cnc_setmactype</a>&nbsp;&nbsp;
               </p><a name="Example"></a><p class="label">Example(C Language)</p>
            <p></p>
            <pre>
The following program writes the specified values into the custom macro
variables within the specified range.

#include "fwlib32.h"

/* start is start variable number to be written. */
/* value is array of value to be written. */
/* number is number of variable. */
short example( short start, long *value, short number )
{
        IODBMR *macror ;
        short ret, idx ;
        macror = (IODBMR *)malloc( 8+8*number ) ;
        macror-&gt;datano_s = start ;
        macror-&gt;datano_e = start + number - 1 ;
        for ( idx = 0 ; idx &lt; number ; idx++ ) {
                macror-&gt;data[idx].mcr_val = value[idx] ;
                macror-&gt;data[idx].dec_val = 0 ;
        }
        ret = cnc_wrmacror( h, 8+8*number, macror ) ;
        free( macror ) ;
        return ( ret ) ;
}
</pre>
            <p class="label">Example(C#)</p>
            <pre>
The following program writes the specified values into the custom macro
variables within the specified range.

class example
{
    /* start is start variable number to be written. */
    /* value is array of value to be written. */
    /* number is number of variable. */
    public short sample(short start, int[] value, short number)
    {
            Focas1.IODBMR      mcrHead = new Focas1.IODBMR();
            Focas1.IODBMR_data mcrData = new Focas1.IODBMR_data();
            short ret, idx;

            byte[] bytes = new byte[8 + 8 * number];
            IntPtr ptrHead = Marshal.AllocCoTaskMem(Marshal.SizeOf(mcrHead));
            IntPtr ptrData = Marshal.AllocCoTaskMem(Marshal.SizeOf(mcrData));

            mcrHead.datano_s = start;
            mcrHead.datano_e = (short)(start + number - 1);
            Marshal.StructureToPtr(mcrHead, ptrHead, false);
            Marshal.Copy(ptrHead, bytes, 0, 8);
            for (idx = 0; idx &lt; number; idx++)
            {
                    mcrData.mcr_val = value[idx];
                    mcrData.dec_val = 0;

                    int pos = 8 + idx * Marshal.SizeOf(mcrData);
                    Marshal.StructureToPtr(mcrData, ptrData, false);
                    Marshal.Copy(ptrData, bytes, pos, Marshal.SizeOf(mcrData));
            }
            ret = Focas1.cnc_wrmacror(h, (short)(8 + 8 * number), bytes);
            Marshal.FreeCoTaskMem(ptrHead);
            Marshal.FreeCoTaskMem(ptrData);
            return (ret);
    }
}</pre>
         </div></FONT><hr>
   </body>
</html>